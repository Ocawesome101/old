local a,b,c=component.invoke,component.list,component.proxy;local d=b("filesystem")()local e=c(d)local f={[d]=c(d)}for d in component.list("filesystem")do f[d]=c(d)end;local g=b("gpu")()if not g then error("GPU required")end;g=c(g)local h=b("screen")()if not h then error("Screen required")end;g.bind(h)g.setResolution(g.maxResolution())local i,j=1,1;local k,l=g.getResolution()local function m()computer.pullSignal(0)end;local function n(o,p)if o<=k and p<=l then i,j=o,p end end;local function q(color)g.setForeground(color)end;local function r()return g.getForeground(color)end;local function s(color)g.setBackground(color)end;local function t(color)return g.getBackground(color)end;local function u(v)g.set(i,j,v)i=i+#v end;local function w()g.copy(1,2,k,l-1,0,-1)g.fill(1,l,k,1," ")end;local function x()g.fill(1,1,k,l," ")end;local y={black=0x000000,red=0xFF0000,green=0x00FF00,blue=0x0000FF,yellow=0xFFFF00,purple=0xFF00FF,aqua=0x00FFFF,white=0xFFFFFF}function write(v)for z in v:gmatch(".")do if z=="\n"then if j==l then w()n(1,j)else n(1,j+1)end else if i==k and j+1==l then w()n(1,j)elseif i==k then n(1,j+1)end;u(z)end end end;function print(...)local A={...}for B=1,#A,1 do if type(A[B])=="table"then print(table.unpack(A[B]))else write(tostring(A[B]))end;if B<#A then write(" ")end end;write("\n")end;x()n(1,1)print("Lite Kernel 0.1")print("Initializing signal processing")local C=computer.pullSignal;sig={}function sig.pull(D,E)local F={}repeat F={C(E)}until F[1]==D or D==nil;return table.unpack(F)end;computer.pullSignal=sig.pull;print("Initializing read()")function read(G)local H=""local I={}for J,K in pairs(G)do I[J]=K end;table.insert(I,"")local L=#I;local M,N=i,j;local function O(P)n(M,N)write((" "):rep(k-M))n(M,N)write(H..(P or""))end;O("|")while true do local Q,R,S,T=sig.pull()if Q=="key_down"then if S==8 then H=H:sub(1,-2)elseif S==13 then O("")write("\n")return H elseif S==0 then if T==208 then if L<#I then L=L+1;H=I[L]end elseif T==200 then if L>1 then L=L-1;H=I[L]end end else if S>=32 and S<=126 then H=H..string.char(S)end end end;O("|")end end;function printError(U)local V=r()q(y.red)print(U)q(V)end;local I={""}setmetatable(I,{__index=table})local W={["free"]=function()print("Used: "..tostring(math.floor((computer.totalMemory()-computer.freeMemory())/1024)).."k / "..tostring(math.floor(computer.totalMemory()/1024)).."k")end,["shutdown"]=function()computer.shutdown()end,["reboot"]=function()computer.shutdown(true)end,["ls"]=function(X)local Y=e.list(X or"/")print(Y)end,["cat"]=function(Z)local _=e.open(Z)local a0=""repeat local F=e.read(_,0xFFFF)a0=a0 ..(F or"")until not F;e.close(_)print(a0)end,["clear"]=function()x()n(1,1)end,["mkdir"]=function(X)e.makeDirectory(X)end,["rm"]=function(Z)e.remove(Z)end}local function a1(H,a2)local a3={}local a4=""for z in H:gmatch(".")do if z==a2 then if a4~=""then table.insert(a3,a4)a4=""end else a4=a4 ..z end end;if a4~=""then table.insert(a3,a4)end;return a3 end;while true do write("litekernel: ")local a5=read(I)I:insert(a5)a5=a1(a5," ")local A={table.unpack(a5,2,a5.n)}a5=a5[1]for J,K in pairs(W)do if J==a5 then local a6,Q=pcall(function()K(table.unpack(A))end)if not a6 and Q then printError(Q)end end end end;computer.shutdown()
